{
	"name": "9_explore_trip_data_green_delta",
	"properties": {
		"folder": {
			"name": "nyc_taxi/discovery"
		},
		"content": {
			"query": "-- LOS ARCHIVOS DELTA SON PARQUET QUE ADEMÁS TIENEN UNA CARPETA DE DELTA_LOG QUE PERMITE RESTAURAR CONSULTAS Y ESTRUCTURAS ANTERIORES\n-- LAS CONSULTAS SE DEBEN HACER DESDE LA CARPTEA RAIZ EN LA QUE ESTA LA CARPETA LOG. NO SE PUEDE MARCAR LA CARPETA MES\n-- TAMBIÉN INFIERE DIRECTAMENTE LOS ESQUEMAS Y METADATOS.\n-- AL IGUAL QUE CON PARQUET, SERVELESS SQL POOL TAMBIÉN DEVUELVE LAS COLUMNAS Y TIPOS DE DATOS \n-- LA PRINCIPAL DIFERENCIA ES QUE LOS RESULTADOS DIRECTAMENTE AÑADEN LAS COLUMNAS AÑO Y MES (PARTICIONES), COSA QUE NO OCURRÍA CON PARQUET\nUSE nyc_taxi_discovery;\n\nSELECT TOP 100 \n        *\n    FROM OPENROWSET(\n        BULK 'trip_data_green_delta/',\n        DATA_SOURCE = 'nyc_taxi_data_raw',\n        FORMAT = 'DELTA'\n    ) AS trip_data\n\n\n-- AHORA PODEMOS PARTICIONAR LAS CONSULTAS A PARTIR DE LOS DELTA LOG\nSELECT TOP 100 \n        *\n    FROM OPENROWSET(\n        BULK 'trip_data_green_delta/year=2020',\n        DATA_SOURCE = 'nyc_taxi_data_raw',\n        FORMAT = 'DELTA'\n    ) AS trip_data\n-- NO FUNCIONA DEBIDO A QUE SE ESPECIFICA YEAR 2020\n\nEXEC sp_describe_first_result_set N'SELECT TOP 100 \n        *\n    FROM OPENROWSET(\n        BULK ''trip_data_green_delta/'',\n        DATA_SOURCE = ''nyc_taxi_data_raw'',\n        FORMAT = ''DELTA''\n    ) AS trip_data'\n-- COMPROBAMOS QUE SEGUIMOS TENIENDO VARCHAR 8000, \n\n-- VAMOS A LIMITAR LOS TIPOS DE VALOR\nSELECT TOP 100 \n        *\n    FROM OPENROWSET(\n        BULK 'trip_data_green_delta/',\n        DATA_SOURCE = 'nyc_taxi_data_raw',\n        FORMAT = 'DELTA'\n    )\n    WITH (\n        VendorID INT,\n        lpep_pickup_datetime datetime2(7),\n        lpep_dropoff_datetime datetime2(7),\n        store_and_fwd_flag CHAR(1),\n        RatecodeID INT,\n        PULocationID INT,\n        DOLocationID INT,\n        passenger_count INT,\n        trip_distance FLOAT,\n        fare_amount FLOAT,\n        extra FLOAT,\n        mta_tax FLOAT,\n        tip_amount FLOAT,\n        tolls_amount FLOAT,\n        ehail_fee INT,\n        improvement_surcharge FLOAT,\n        total_amount FLOAT,\n        payment_type INT,\n        trip_type INT,\n        congestion_surcharge FLOAT,\n        year VARCHAR(4),\n        month VARCHAR(2)\n    ) AS trip_data;\n\n\n-- VAMOS A ESCOGER COLUMNAS PARA REDUCIR MEMORIA Y COSTES,\n-- PERO DEBEMOS HACERLO SELECCIONANDO LAS COLUMNAS QUE PARTICIONAN LOS DATOS (AÑO Y MES)\nSELECT TOP 100 \n        *\n    FROM OPENROWSET(\n        BULK 'trip_data_green_delta/',\n        DATA_SOURCE = 'nyc_taxi_data_raw',\n        FORMAT = 'DELTA'\n    )\n    WITH (\n        tip_amount FLOAT,\n        trip_type INT,\n        year VARCHAR(4),\n        month VARCHAR(2)\n    ) AS trip_data;\n\n-- AHORA HACEMOS UN CONTEO DE VALORES ÚNICOS CON WHERE PARA LIMITAR RESULTADOS Y COSTES\nSELECT COUNT(DISTINCT payment_type)\n    FROM OPENROWSET(\n        BULK 'trip_data_green_delta/',\n        DATA_SOURCE = 'nyc_taxi_data_raw',\n        FORMAT = 'DELTA'\n    ) AS trip_data\nWHERE year = '2020' AND month = '01';\n-- SI ACTUALIZAMOS LOS DATOS UTILIZANDO SPARK POOL Y DATABRICKS, HABRÁN DOS VERSIONES DIFERENTES EN DELTA LOGS\n-- SQL SERVERLESS POOL AÚN NO PERMITE TRABAJAR CON DOS VERSIONES DIFERENTES DE LOS DATOS. \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "nyc_taxi_discovery",
				"poolName": "Built-in"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}